/*
 * fsm_automatic.c
 *
 *  Created on: Nov 2, 2022
 *      Author: HELLO SON
 */

#include "fsm_automatic.h"
#include "global.h"
#include "timer.h"

#define RED 0
#define AMBER 1
#define GREEN 2

#define button1 0
#define button2 1
#define button3 2

static uint8_t lightbufferMod[3]={1,1,1};
static uint8_t lightbufferRun[3]={1,1,1};
static uint8_t mode;

int redtime=5000;
int yellowtime=2000;
int greentime=3000;
int time1=0;
int time2=0;

void initial()
{
	status=AUTO_RED;
	status2=AUTO_GREEN;
	time1=lightbufferRun[0];
	time2=lightbufferRun[2];
	setTimer1(1000);
	mode=1;
}

void  traffic()
{
	if(status==AUTO_RED)
	{
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, RESET);
		HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, SET);
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, SET);
		if(time1==0)
		{
			status=AUTO_GREEN;
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, SET);
			HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, SET);
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, RESET);
			time1=lightbufferRun[2];
		}
	}
	else if(status==AUTO_YELLOW)
	{
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, RESET);
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, SET);
		if(time1==0)
		{
			status=AUTO_RED;
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, RESET);
			HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, SET);
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, SET);
			time1=lightbufferRun[0];
		}
	}
	else if(status==AUTO_GREEN)
	{
		HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, SET);
		HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, RESET);
		if(time1==0)
		{
			status=AUTO_YELLOW;
			HAL_GPIO_WritePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin, SET);
			HAL_GPIO_WritePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin, RESET);
			HAL_GPIO_WritePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin, SET);
			time1=lightbufferRun[1];
		}
	}
	if(status2==AUTO_RED)
	{
		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, RESET);
		HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, SET);
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, SET);
		if(time2==0)
		{
			status2=AUTO_GREEN;
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, SET);
			HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, SET);
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, RESET);
			time2=lightbufferRun[2];
		}
	}
	else if(status2==AUTO_YELLOW)
	{
		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, RESET);
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, SET);
		if(time2==0)
		{
			status2=AUTO_RED;
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, RESET);
			HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, SET);
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, SET);
			time2=lightbufferRun[0];
		}
	}
	else if(status2==AUTO_GREEN)
	{
		HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, SET);
		HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, SET);
		HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, RESET);
		if(time2==0)
		{
			status2=AUTO_YELLOW;
			HAL_GPIO_WritePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin, SET);
			HAL_GPIO_WritePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin, RESET);
			HAL_GPIO_WritePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin, SET);
			time2=lightbufferRun[1];
		}
	}
	if(mode==1) &&(timer1_flag==1)
	{
		timer1--;
		timer2--;
		setTimer1(1000);
	}
}
void  increasedTime(uint8_t led)
{
	lightbufferMod[led]++;
	if(lightbufferMod[led]>99)
	{
		lightbufferMod[led]=1;
	}
}
void updateMode()
{
	mode++;
	if(mode>3) mode=1;
}
void copyModtoRun()
{
	for(int i=0;i<3;i++)
	{
		lightbufferRun[i]=lightbufferMod[i];
	}
}
void copyRuntoMod()
{
	for(int i=0;i<3;i++)
	{
		lightbufferMod[i]=lightbufferRun[i];
	}
}
void blinkLed(uint8_t led)
{
	if((mode!=1)&&(blink_flag==1))
	{
		if(led==RED)
		{
			HAL_GPIO_TogglePin(LED_RED_1_GPIO_Port, LED_RED_1_Pin);
			HAL_GPIO_TogglePin(LED_RED_2_GPIO_Port, LED_RED_2_Pin);
		}
		else if(led==AMBER)
		{
			HAL_GPIO_TogglePin(LED_YELLOW_1_GPIO_Port, LED_YELLOW_1_Pin);
			HAL_GPIO_TogglePin(LED_YELLOW_2_GPIO_Port, LED_YELLOW_2_Pin);
		}
		else if(led==GREEN)
		{
			HAL_GPIO_TogglePin(LED_GREEN_1_GPIO_Port, LED_GREEN_1_Pin);
			HAL_GPIO_TogglePin(LED_GREEN_2_GPIO_Port, LED_GREEN_2_Pin);
		}
		setBlink(500);
	}
}
void fsm_automatic()
{
	if(is_button_pressed(button3))
	{
		copyModtoRun();
		mode=1;
		updatebuffer(lightbufferRun[0], number2)
	}
}

